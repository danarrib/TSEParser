
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace TSERDV {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "EntidadeRegistroDigitalVoto", IsSet = false)]
    public class EntidadeRegistroDigitalVoto : IASN1PreparedElement 
    {
        
        private IDPleito pleito_;
        
		[ASN1Element(Name = "pleito", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public IDPleito Pleito
        {
            get { return pleito_; }
            set { pleito_ = value;  }
        }
  
        private Fase fase_;
        
		[ASN1Element(Name = "fase", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public Fase Fase
        {
            get { return fase_; }
            set { fase_ = value;  }
        }
  
        private IdentificacaoSecaoEleitoral identificacao_;
        
		[ASN1Element(Name = "identificacao", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public IdentificacaoSecaoEleitoral Identificacao
        {
            get { return identificacao_; }
            set { identificacao_ = value;  }
        }
  
        private Eleicoes eleicoes_;
        
		[ASN1Element(Name = "eleicoes", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public Eleicoes Eleicoes
        {
            get { return eleicoes_; }
            set { eleicoes_ = value;  }
        }
  

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EntidadeRegistroDigitalVoto));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
