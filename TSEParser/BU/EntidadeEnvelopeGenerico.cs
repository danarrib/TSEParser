
//
// This file was generated by the BinaryNotes compiler (created by Abdulla Abdurakhmanov, modified by Sylvain Prevost).
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using System.Numerics;

using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace TSEBU {


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "EntidadeEnvelopeGenerico", IsSet = false)]
    public class EntidadeEnvelopeGenerico : IASN1PreparedElement 
    {
        
        private CabecalhoEntidade cabecalho_;
        
		[ASN1Element(Name = "cabecalho", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public CabecalhoEntidade Cabecalho
        {
            get { return cabecalho_; }
            set { cabecalho_ = value;  }
        }
  
        private Fase fase_;
        
		[ASN1Element(Name = "fase", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public Fase Fase
        {
            get { return fase_; }
            set { fase_ = value;  }
        }
  
        private Urna urna_;
        
        private bool  urna_present = false;
        
		[ASN1Element(Name = "urna", IsOptional = true, HasTag = false, HasDefaultValue = false)]
        public Urna Urna
        {
            get { return urna_; }
            set { urna_ = value; urna_present = true;  }
        }
  
        private IdentificacaoUrna identificacao_;
        
		[ASN1Element(Name = "identificacao", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public IdentificacaoUrna Identificacao
        {
            get { return identificacao_; }
            set { identificacao_ = value;  }
        }
  
        private TipoEnvelope tipoEnvelope_;
        
		[ASN1Element(Name = "tipoEnvelope", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public TipoEnvelope TipoEnvelope
        {
            get { return tipoEnvelope_; }
            set { tipoEnvelope_ = value;  }
        }
  
        private Seguranca seguranca_;
        
        private bool  seguranca_present = false;
        
		[ASN1Element(Name = "seguranca", IsOptional = true, HasTag = false, HasDefaultValue = false)]
        public Seguranca Seguranca
        {
            get { return seguranca_; }
            set { seguranca_ = value; seguranca_present = true;  }
        }
  
        private byte[] conteudo_;
        [ASN1OctetString( Name = "" )]
    
		[ASN1Element(Name = "conteudo", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public byte[] Conteudo
        {
            get { return conteudo_; }
            set { conteudo_ = value;  }
        }
  
        public bool isUrnaPresent()
        {
            return this.urna_present == true;
        }
        
        public bool isSegurancaPresent()
        {
            return this.seguranca_present == true;
        }
        

        public void initWithDefaults() 
        {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EntidadeEnvelopeGenerico));
        public IASN1PreparedElementData PreparedData 
        {
            get { return preparedData; }
        }

    }
            
}
